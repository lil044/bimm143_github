---
title: "Lab 11 - Tue 2.11 - HIV PR Dimer"
author: "Jessica Le (PID: A17321021)"
format: pdf
---
## Visualization of the Models 

Use Mol* to visualize the PDB files regarding the HIV PR Dimer. 

![Superposed HIV protein dimer model for chain A](superimpose_hiv_dimer.png)

![Chain A fitted and pLDDT colored structure model for HIV Protein Dimer](ChainA_fitted_pLDDT.png)

## Custom Analysis of Resulting Models 

We will read the results of the HIV-Pr dimer AlphaFold2 models into R with the help of the `Bio3D package`. 

```{r}
results_dir <- "HIVPrDimer_23119"
```

```{r}
pdb_files <- list.files(path=results_dir,
                        pattern="*.pdb",
                        full.names = TRUE)
basename(pdb_files)
```

```{r}
library(bio3d)
# Read all data from Models and superpose/fit coords

pdbs <- pdbaln(pdb_files, fit=TRUE, exefile="msa")
pdbs
```

RMSD is a standard measure of structural distance between coordinate sets. We can use the `rmsd()` function to calculate the RMSD between all pairs models.

```{r}
rd <- rmsd(pdbs, fit=T)
range(rd)
```

```{r}
#Draw a heatmap of these RMSD matrix values
library(pheatmap)

colnames(rd) <- paste0("m",1:5)
rownames(rd) <- paste0("m",1:5)
pheatmap(rd)
```
Models 1 and 2 are the most similar to each other. Models 4 and 5 are somewhat similar to each other, and also more similar to model 3 than they are to models 1 and 2.


Let's now plot the pLDDT values across all models. 
```{r}
# Read a reference PDB structure
pdb <- read.pdb("1hsg")
```

```{r}
plotb3(pdbs$b[1,], typ="l", lwd=2, sse=pdb)
points(pdbs$b[2,], typ="l", col="red")
points(pdbs$b[3,], typ="l", col="blue")
points(pdbs$b[4,], typ="l", col="darkgreen")
points(pdbs$b[5,], typ="l", col="orange")
abline(v=100, col="gray")
```
We can improve the superposition/fitting of our models by finding the most consistent “rigid core” common across all the models. For this we will use the `core.find()` function:

```{r}
core <- core.find(pdbs)
```

Use the identified core atom positions to find more suitable superposition and write out the fitted structures to a directory called `corefit_structures`. 

```{r}
core.inds <- print(core, vol=0.5)
```

```{r}
xyz <- pdbfit(pdbs, core.inds, outpath="corefit_structures")
```

![Core superposed structures colored by B-factor i.e pLDDT](Lab 11 - Core Superposed Structures Colored by B-factor.png)

Now we can examine the RMSF between positions of the structure. RMSF is an often used measure of conformational variance along the structure:

```{r}
rf <- rmsf(xyz)

plotb3(rf, sse=pdb)
abline(v=100, col="gray", ylab="RMSF")
```
This plot shows that the first chain is very similar across the different models while the second chain is more variable. 

## Predicted Alignment Error for Domains 

AlphaFold also produces an output called `Predicted Aligned Error (PAE)` that is independent of the 3D structure. This output is detailed in the JSON format result files and contains one for each model structure. 

```{r}
library(jsonlite)

# Listing of all PAE JSON files
pae_files <- list.files(path=results_dir,
                        pattern=".*model.*\\.json",
                        full.names = TRUE)
```

We will read the 1st and 5th files to make plots.

```{r}
pae1 <- read_json(pae_files[1],simplifyVector = TRUE)
pae5 <- read_json(pae_files[5],simplifyVector = TRUE)

attributes(pae1)
```

```{r}
# Per-residue pLDDT scores (same as B-factor of PDB).
head(pae1$plddt)
```

The maximum PAE values are useful for ranking models. 

```{r}
pae1$max_pae
```
```{r}
pae5$max_pae
```
The values here show that model 5 is worse than model 1 since a lower PAE score when comparing between models. 

We can plot the N by N (where N is the number of residues) PAE scores with ggplot or with functions from the `Bio3D` package:

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)")
```

```{r}
plot.dmat(pae5$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

It is better to plot using the same z range. Below is the model 1 plot again but with the same data range as the plot for model 5. 

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

## Residue Conservation from Alignment File

We will now take a look at the alignment file. 
```{r}
aln_file <- list.files(path=results_dir,
                       pattern=".a3m$",
                        full.names = TRUE)
aln_file
```

```{r}
aln <- read.fasta(aln_file[1], to.upper = TRUE)
```

> How many sequences are in this alignment? 

```{r}
dim(aln$ali)
```
To score the residue conservation in the alignment with the `conserv()` function. 
```{r}
sim <- conserv(aln)
plotb3(sim[1:99], sse=trim.pdb(pdb, chain="A"),
       ylab="Conservation Score")
```
The plot shows that residues D25, T26, G27, and A28 are highlighy conserved. These positions will stand out if we generate a consensus sequence with a high cutoff value. 

```{r}
con <- consensus(aln, cutoff = 0.9)
con$seq
```

Let's createa final visualize to show these functionally important sites by mapping the conservation score to the Occupancy column of a PDB file that will be viewed using Mol*. 
```{r}
m1.pdb <- read.pdb(pdb_files[1])
occ <- vec2resno(c(sim[1:99], sim[1:99]), m1.pdb$atom$resno)
write.pdb(m1.pdb, o=occ, file="m1_conserv.pdb")
```

![Top ranked dimer model colored by sequence conservation. The dark purple indicates the conserved positions while the DTGA motif of a single chain is highlighted in green.](m1_conserved.png)

This figure helps to show the central conserved active site in the model where the natural peptide substrate (and small molecule inhibitors) would bind between domains. 
